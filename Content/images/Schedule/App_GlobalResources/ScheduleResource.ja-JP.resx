<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDayEvents" xml:space="preserve">
    <value>終日イベント</value>
  </data>
  <data name="AM" xml:space="preserve">
    <value>午前</value>
  </data>
  <data name="AppointmentDelete" xml:space="preserve">
    <value>削除する</value>
  </data>
  <data name="AppointmentDeleteAlert" xml:space="preserve">
    <value>あなたはこの予定を削除してもよろしいですか？</value>
  </data>
  <data name="AppointmentEndTime" xml:space="preserve">
    <value>終了時間</value>
  </data>
  <data name="AppointmentHighImportance" xml:space="preserve">
    <value>重要度の高い</value>
  </data>
  <data name="AppointmentLocation" xml:space="preserve">
    <value>場所</value>
  </data>
  <data name="AppointmentLowImportance" xml:space="preserve">
    <value>重要度が低い</value>
  </data>
  <data name="AppointmentRecurrence" xml:space="preserve">
    <value>再発</value>
  </data>
  <data name="AppointmentReminder" xml:space="preserve">
    <value>リマインダー</value>
  </data>
  <data name="AppointmentResource" xml:space="preserve">
    <value>リソース</value>
  </data>
  <data name="AppointmentStartTime" xml:space="preserve">
    <value>開始時刻</value>
  </data>
  <data name="AppointmentSubject" xml:space="preserve">
    <value>テーマ</value>
  </data>
  <data name="AppointmentTimeZones" xml:space="preserve">
    <value>時間帯</value>
  </data>
  <data name="AppointmentWindow" xml:space="preserve">
    <value>アポイントメント</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ButtonExport" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="ButtonImport" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="ButtonOk" xml:space="preserve">
    <value>[OK]</value>
  </data>
  <data name="ButtonRemoveRecurrence" xml:space="preserve">
    <value>再発を削除します。</value>
  </data>
  <data name="Categorize" xml:space="preserve">
    <value>分類する</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="DaycellTooltip" xml:space="preserve">
    <value>予定を追加するをダブルクリック</value>
  </data>
  <data name="Effective" xml:space="preserve">
    <value>効果的な</value>
  </data>
  <data name="Every" xml:space="preserve">
    <value>すべての</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>から</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>時間</value>
  </data>
  <data name="MandatoryProperTimeAlert" xml:space="preserve">
    <value>あなたが入力した終了日が開始日の前に発生します。</value>
  </data>
  <data name="MandatoryRecurrenceCountAlert" xml:space="preserve">
    <value>再発パターンが有効ではありません。</value>
  </data>
  <data name="MandatorySubjectAlert" xml:space="preserve">
    <value>件名を入力します。</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="MonthcellTooltip" xml:space="preserve">
    <value>追加するには、ダブルクリックします。</value>
  </data>
  <data name="MustSelectAppointmentAlert" xml:space="preserve">
    <value>彼らのリマインダを居眠りする予定を選択します。</value>
  </data>
  <data name="MustSelectReminderAlert" xml:space="preserve">
    <value>彼らのリマインダを居眠りするアラーム値を選択します。</value>
  </data>
  <data name="NextReminderTime" xml:space="preserve">
    <value>に再び思い出させられるように居眠りをクリックします</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="Occursevery" xml:space="preserve">
    <value>すべての発生</value>
  </data>
  <data name="PM" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="ProperDataAlert" xml:space="preserve">
    <value>適切なデータを入力します。</value>
  </data>
  <data name="RecurrenceDaily" xml:space="preserve">
    <value>毎日の</value>
  </data>
  <data name="RecurrenceDeleteAlert" xml:space="preserve">
    <value>これは、繰り返し予定ですが、あなたはこの予定を削除してもよろしいですか？</value>
  </data>
  <data name="RecurrenceDuration" xml:space="preserve">
    <value>約束の時間</value>
  </data>
  <data name="RecurrenceEnd" xml:space="preserve">
    <value>終わり</value>
  </data>
  <data name="RecurrenceEndby" xml:space="preserve">
    <value>で終了</value>
  </data>
  <data name="RecurrenceMonthly" xml:space="preserve">
    <value>毎月</value>
  </data>
  <data name="RecurrencePattern" xml:space="preserve">
    <value>再発パターン</value>
  </data>
  <data name="RecurrenceRange" xml:space="preserve">
    <value>再発の範囲</value>
  </data>
  <data name="RecurrenceStart" xml:space="preserve">
    <value>スタート</value>
  </data>
  <data name="RecurrenceWeekly" xml:space="preserve">
    <value>毎週</value>
  </data>
  <data name="RecurrenceWindow" xml:space="preserve">
    <value>再発</value>
  </data>
  <data name="RecurrenceYearly" xml:space="preserve">
    <value>毎年</value>
  </data>
  <data name="ReminderDismiss" xml:space="preserve">
    <value>却下する</value>
  </data>
  <data name="ReminderDismissAll" xml:space="preserve">
    <value>すべて却下する</value>
  </data>
  <data name="ReminderOpenItem" xml:space="preserve">
    <value>開いているアイテム</value>
  </data>
  <data name="ReminderSnooze" xml:space="preserve">
    <value>居眠り</value>
  </data>
  <data name="ReminderWindow" xml:space="preserve">
    <value>リマインダー</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>リソース</value>
  </data>
  <data name="SaveAndClose" xml:space="preserve">
    <value>保存して閉じる</value>
  </data>
  <data name="SelectAppointmentAlert" xml:space="preserve">
    <value>その詳細を表示する予定を選択します。</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>へ</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>今日は</value>
  </data>
  <data name="Until" xml:space="preserve">
    <value>まで</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>週</value>
  </data>
  <data name="Workweek" xml:space="preserve">
    <value>週間労働時間</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="BlueCategorize" xml:space="preserve">
    <value>ブルーは分類</value>
  </data>
  <data name="GreenCategorize" xml:space="preserve">
    <value>緑色の分類</value>
  </data>
  <data name="OrangeCategorize" xml:space="preserve">
    <value>オレンジ色の分類</value>
  </data>
  <data name="PurpleCategorize" xml:space="preserve">
    <value>紫分類</value>
  </data>
  <data name="RedCategorize" xml:space="preserve">
    <value>赤は分類</value>
  </data>
  <data name="YellowCategorize" xml:space="preserve">
    <value>分類黄色</value>
  </data>
  <data name="Invaliddatemessage" xml:space="preserve">
    <value>あなたは、日付/時刻を指定する必要があります。それらは有効な日付/時刻を表すかどうかを確認するには、このダイアログボックスでエントリを確認します。</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="DayNames" xml:space="preserve">
    <value>日曜日,月曜日,火曜日,水曜日,木曜日,金曜日,土曜日</value>
  </data>
  <data name="DeleteConfirmTitle" xml:space="preserve">
    <value>削除の確認</value>
  </data>
  <data name="DeleteOccurrence" xml:space="preserve">
    <value>このオカレンスを削除します。</value>
  </data>
  <data name="DeleteSeries" xml:space="preserve">
    <value>シリーズを削除します。</value>
  </data>
  <data name="GoToDate" xml:space="preserve">
    <value>日付に移動</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>次の</value>
  </data>
  <data name="NextAppointment" xml:space="preserve">
    <value>次のアポイントメント</value>
  </data>
  <data name="NoEndDate" xml:space="preserve">
    <value>終了日なしなし</value>
  </data>
  <data name="Occurrences" xml:space="preserve">
    <value>occurrences</value>
  </data>
  <data name="Occurs" xml:space="preserve">
    <value>Occurs</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>の</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>上の</value>
  </data>
  <data name="OpenConfirmTitle" xml:space="preserve">
    <value>定期的なアイテムを開きます。</value>
  </data>
  <data name="OpenOccurrence" xml:space="preserve">
    <value>この発生を開きます。</value>
  </data>
  <data name="OpenSeries" xml:space="preserve">
    <value>シリーズを開きます</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>前</value>
  </data>
  <data name="PreviousAppointment" xml:space="preserve">
    <value>先約</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="Recurrence" xml:space="preserve">
    <value>再発</value>
  </data>
  <data name="RecurrenceEvery" xml:space="preserve">
    <value>すべての</value>
  </data>
  <data name="ShowIn" xml:space="preserve">
    <value>で示しています。</value>
  </data>
  <data name="The" xml:space="preserve">
    <value>ザ</value>
  </data>
  <data name="WeekCounts" xml:space="preserve">
    <value>最後に,第四,第三に,第二に,最初の</value>
  </data>
  <data name="Weekday" xml:space="preserve">
    <value>平日</value>
  </data>
  <data name="EndAfter" xml:space="preserve">
    <value>後に終了</value>
  </data>
  <data name="MonthNames" xml:space="preserve">
    <value>1月,2月,3月,4月,5月,6月,7月,8月,9月,10月,11月,12月</value>
  </data>
</root>