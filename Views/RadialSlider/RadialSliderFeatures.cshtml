@{
    ViewBag.Title = "RadialSlider";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>RadialSlider Features:</h2>
<br/>
<li> Default</li>
<li> API</li>
<li> Theme - Flat-Saffron</li>
<br/>
<div id = "ControlRegion">
@Html.EJ().RadialSlider("apiradialSlider").InnerCircleImageUrl("../Content/Images/radialslider/chevron-right.png")
			<div class="prop-grid">
        <div class="row-fluid">
            <div class="row">
                <div class="col-md-12" style="text-align: left">
                    Start Angle (0-360)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.EJ().Slider("startAngleSlider").Height("16").Width("225").Value("0").MinValue(0).MaxValue(360).IncrementStep(10).ClientSideEvents(c => c.Change("onStartchange"))
            </div>
        </div>
        <div class="row-fluid">
            <div class="row">
                <div class="col-md-12" style="text-align: left">
                    End Angle (360-0)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.EJ().Slider("endAngleSlider").Height("16").Width("225").Value("360").MinValue(360).MaxValue(0).IncrementStep(10).ClientSideEvents(c => c.Change("onEndchange"))
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                Stroke width
            </div>
            <div class="col-md-3">
                @Html.EJ().NumericTextbox("numeric").Name("numeric").MinValue(1).MaxValue(10).Value(2).Width("108").ClientSideEvents(c => c.Change("valueChange"))
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                Show
            </div>
            <div class="col-md-3">
                @Html.EJ().ToggleButton("radialshow").Width("107").ClientSideEvents(c => c.Change("radialshowChange")).DefaultText("Hide").ActiveText("Show")
            </div>
        </div>
    </div>
<script>
    $(function () {
    });
    function onStartchange(args) {
        var instance = $("#apiradialSlider").data("ejRadialSlider");
        var value1 = instance.model.endAngle;
        if (args.value > value1)
            alert("Value must be less than end angle");
        else
            $("#apiradialSlider").ejRadialSlider({ startAngle: args.value })
    }
    function onEndchange(args) {
        var instance = $("#apiradialSlider").data("ejRadialSlider");
        var value2 = instance.model.startAngle;
        if (args.value < value2)
            alert("Value must be greater than start angle");
        else
            $("#apiradialSlider").ejRadialSlider({ endAngle: args.value })
    }
    function onShowHideReset(args) {
        var roundUpp = args.isChecked ? false : true;
        $("#apiradialSlider").ejRadialSlider({ enableRoundOff: roundUpp })
    }
    function valueChange(args) {
    if(!ej.isNullOrUndefined(args.value))
        $("#apiradialSlider").ejRadialSlider({ strokeWidth: args.value })
    }
    function radialshowChange(args) {
        $("#apiradialSlider").ejRadialSlider(args.isChecked ? "hide" : "show");
    }
</script>
</div>
